/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tp22;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Scanner;
import java.lang.*;
//ByteBuffer.allocate(4).putInt(a).array()
//ByteBuffer.wrap(dataPacket.getData()).getInt()

public class App {
    public static final String ANSI_RESET = "\u001B[0m";
    public static final String ANSI_RED = "\u001B[33m";
    public static final String ANSI_GREEN = "\u001B[32m";

    public static void send(String ip,int port,DatagramSocket socket,String message)throws Exception{
        byte[] buff =new byte[512];
        buff=message.getBytes();
        InetAddress adress =InetAddress.getByName(ip);
        DatagramPacket packet=new DatagramPacket(buff,buff.length,adress,port);
        socket.send(packet);
        System.out.println("sent [\'" +message+"\']\n");

    }
    public static String receive(DatagramSocket socket)throws Exception{
        byte[] buff =new byte[512];
        DatagramPacket packet=new DatagramPacket(buff,buff.length);
        socket.receive(packet);
        String message=new String(buff,0,packet.getLength());
        System.out.println("received [\'" +message+"\']\n");
        return message;

    }

    public static void main(String[] args) throws Exception{
        Scanner keyboard=new Scanner(System.in);
        double a,b,c,delta,x0,x1,x2; 
        if(args[0].equals("1")){

            DatagramSocket socket=new DatagramSocket(20001);
            // getting user input 
            while(true){ 
                System.out.println("==========================");
                System.out.print("donner A: ");
                a=Double.valueOf(keyboard.nextLine());
                System.out.print("donner B: ");
                b=Double.valueOf(keyboard.nextLine());
                System.out.print("donner C: ");
                c=Double.valueOf(keyboard.nextLine());
                if(a==0){
                    System.out.println(ANSI_GREEN+"sending b,c to P2"+ANSI_RESET+"\n");
                    //send to p2 
                    Thread.sleep(1000);
                    System.out.println("sending b");
                    send("127.0.0.1",20002,socket,String.valueOf(b));
                    Thread.sleep(1000);
                    System.out.println("sending c");
                    send("127.0.0.1",20002,socket,String.valueOf(c));
                    String response =receive(socket);
                    if(response.equals("all")){
                        System.out.println("");
                        System.out.println("Tout les nombre reel sont des solution");

                    }
                    else if(response.equals("none")){
                        System.out.println("");
                        System.out.println("L'equation n'a pas de solution");

                    }
                    //print answer
                    else{
                        System.out.println("");
                        System.out.print("x= ");
                        System.out.println(response);
                    }
                }
                //send abc to p3 
                else{
                    System.out.println(ANSI_RED+"Sending a,b,c to P3"+ANSI_RESET+"\n");
                    System.out.println("sending a");
                    send("127.0.0.1",20003,socket,String.valueOf(a));
                    Thread.sleep(500);
                    System.out.println("sending b");
                    send("127.0.0.1",20003,socket,String.valueOf(b));
                    Thread.sleep(500);
                    System.out.println("sending c");
                    send("127.0.0.1",20003,socket,String.valueOf(c));
                    Thread.sleep(500);

                    //receive delta
                    delta=Double.valueOf(receive(socket));

                    if(delta>0){
                        //count the tow answers
                        //
                        System.out.println("");
                        System.out.print("X1= ");
                        System.out.println((-b-Math.sqrt(delta))/(2*a)); 
                        System.out.print("X2= ");
                        System.out.println((-b+Math.sqrt(delta))/(2*a)); 
                    }
                    else if(delta==0){

                        System.out.println("");
                        System.out.print("x0=");
                        System.out.println(-b/(2*a)); 
                        // return the only doubled results
                    }
                    else{
                        System.out.println("");
                        System.out.println("l'equation n'a pas de solution");
                    }



                }
            }}

        if(args[0].equals("2")){
            DatagramSocket socket=new DatagramSocket(20002);
            while(true){
                System.out.println(ANSI_GREEN+"==========================");
                System.out.println("waiting on b");
                b=Double.valueOf(receive(socket)); 
                System.out.println("waiting on c");
                c=Double.valueOf(receive(socket));

                if(b==0){
                    if(c==0)
                        send("127.0.0.1",20001,socket,"all");
                    else 
                        send("127.0.0.1",20001,socket,"none");

                }
                else
                    send("127.0.0.1",20001,socket,String.valueOf(-c/b));

                System.out.println("");
            }

        }
        while(args[0].equals("3")){
            DatagramSocket socket=new DatagramSocket(20003);
            while (true) {
                System.out.println(ANSI_RED+"==========================");
                System.out.println("waiting on a");
                a=Double.valueOf(receive(socket));
                System.out.println("waiting on b");
                b=Double.valueOf(receive(socket));
                System.out.println("waiting on c");
                c=Double.valueOf(receive(socket));
                
                delta=b*b-4*a*c;

                System.out.print("delta=");
                System.out.println(delta);
                System.out.println("");
                send("127.0.0.1",20001,socket,String.valueOf(delta));
                System.out.println("");
            }

        }


    }
}
